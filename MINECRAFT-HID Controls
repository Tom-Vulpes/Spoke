# This code emulates the default controls for playing Minecraft on PC. The first 11 pins are keyboard controls and then from GP12 to GP17 are mouse controls.

import time
import board
import touchio
import usb_hid
from adafruit_hid.keyboard import Keyboard
from adafruit_hid.keycode import Keycode
from adafruit_hid.mouse import Mouse

# Initialize USB HID devices
kpd = Keyboard(usb_hid.devices)
mouse = Mouse(usb_hid.devices)

# Define the touch pins for keyboard and mouse controls
touch_pins_keyboard = [
    board.GP0, board.GP1, board.GP2, board.GP3, board.GP4, board.GP5,
    board.GP6, board.GP7, board.GP8, board.GP9, board.GP10, board.GP11,
]
touch_pins_mouse = [
    board.GP12, board.GP13, board.GP14, board.GP15, board.GP16, board.GP17
]

# Initialize touch sensors for keyboard and mouse controls
touch_sensors_keyboard = [touchio.TouchIn(pin) for pin in touch_pins_keyboard]
touch_sensors_mouse = [touchio.TouchIn(pin) for pin in touch_pins_mouse]

# Keymap configuration for Minecraft controls
KEYMAP_MINECRAFT = (
    ("Forward", [Keycode.W]),      # Move forward
    ("Left", [Keycode.A]),         # Strafe left
    ("Back", [Keycode.S]),         # Move backward
    ("Right", [Keycode.D]),        # Strafe right
    ("Jump", [Keycode.SPACE]),     # Jump
    ("Sneak", [Keycode.LEFT_SHIFT]),   # Sneak (crouch)
    ("Inventory", [Keycode.E]),    # Open inventory
    ("Use", [Keycode.RIGHT_SHIFT]),    # Use item/place block
    ("Attack", [Keycode.MOUSE_LEFT]),   # Attack
    ("Interact", [Keycode.MOUSE_RIGHT]),    # Interact
    ("Sprint", [Keycode.LEFT_CONTROL]),    # Sprint
    ("Drop", [Keycode.Q]),         # Drop item
)

# Mouse movement configuration
MOUSE_MOVEMENT = 10  # Change this value to adjust mouse movement speed

# Main loop
while True:
    # Check each touch sensor for keyboard controls
    for i, sensor in enumerate(touch_sensors_keyboard):
        # If the capacitive touch is activated
        if sensor.value:
            # If the key was not already pressed
            print(f"Key pressed: {chr(ord('A') + i)}")
            for keycode in KEYMAP_MINECRAFT[i][1]:
                kpd.press(keycode)  # Press the corresponding key
            # Update key state
            time.sleep(0.1)  # Add a small delay to debounce
        else:
            # If the key was previously pressed, release it
            for keycode in KEYMAP_MINECRAFT[i][1]:
                kpd.release(keycode)  # Release the corresponding key
            time.sleep(0.1)  # Add a small delay to debounce

    # Check each touch sensor for mouse controls
    for i, sensor in enumerate(touch_sensors_mouse):
        # If the capacitive touch is activated
        if sensor.value:
            # Check which touch pin is activated
            if i == 0:  # GP12
                mouse.move(x=MOUSE_MOVEMENT, y=0)  # Move mouse to the right
            elif i == 1:  # GP13
                mouse.move(x=-MOUSE_MOVEMENT, y=0)  # Move mouse to the left
            elif i == 2:  # GP14
                mouse.move(x=0, y=-MOUSE_MOVEMENT)  # Move mouse upwards
            elif i == 3:  # GP15
                mouse.move(x=0, y=MOUSE_MOVEMENT)  # Move mouse downwards
            elif i == 4:  # GP16
                mouse.click(Mouse.LEFT_BUTTON)  # Perform a left mouse click
            time.sleep(0.1)  # Add a small delay to debounce
            elif i == 5:  # GP17
                mouse.click(Mouse.RIGHT_BUTTON)  # Perform a right mouse click
            time.sleep(0.1)  # Add a small delay to debounce
